{"version":3,"sources":["Sorting/sortingalgos/bubbleSort.js","Sorting/sortingalgos/heapSort.js","Sorting/sortingalgos/mergeSort.js","Sorting/sortingalgos/quickSort.js","Sorting/sortingalgos/reverseSort.js","Sorting/Sorting.js","Sorting/sortingalgos/insertionSort.js","Sorting/sortingalgos/selectionSort.js","Pathfinding/Node/Node.js","Pathfinding/pathfindingalgos/dijkstras.js","Pathfinding/pathfindingalgos/bfs.js","Pathfinding/pathfindingalgos/dfs.js","Pathfinding/mazealgos/recursiveDivision.js","Pathfinding/helpers/animation.js","Pathfinding/helpers/nodes.js","Pathfinding/Pathfinding.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["bubbleSort","array","animations","swapped","n","length","i","j","swap","push","bubbleSortHelper","temp","heapSort","Math","ceil","heapify","heapSortHelper","largest","l","r","mergeSort","mergeSortHelper","mainarray","start","end","mid","floor","k","merge","quickSort","quickSortHelper","pivot","m","findPivot","reverseSort","reverseSortHelper","ArrayBar","pixel","map","value","idx","className","style","height","backgroundColor","width","marginRight","mr","ANIMATION_SPEED_MS","ARRAY_LEN","timeouts","SortingVisualiser","props","toggle","setState","dropdownOpen","state","console","log","arraybars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOne","barTwo","color","setTimeout","barIdx","barheight","dec","tempHeight","changeArrayLength","e","parseInt","target","container","offsetWidth","resetArray","changeSortingSpeed","Number","calculateComplexity","tc","getElementById","sc","innerHTML","sort","insertionSort","selectionSort","window","addEventListener","this","key","insertionSortHelper","barTwoIdx_hei","min_idx","selectionSortHelper","clearTimeout","clearTimeout_","min","max","random","Navbar","dark","expand","NavbarBrand","to","Nav","navbar","NavItem","htmlFor","type","id","defaultValue","onChange","Button","onClick","ref","el","Component","Node","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","onMouseLeave","row","extraClass","dijkstras","grid","startNode","finishNode","visitedOrder","distance","unvisitedNodes","nodes","node","f","getNodes","nodeA","nodeB","currentNode","shift","Infinity","isVisited","updateNeighbors","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","check","dfs","finish","dfsHelper","found","compare","i_dir","j_dir","temp_node","recursiveDivision","x_st","y_st","x_end","y_end","orientation","wallsOrder","undefined","divide","divideDir","wx","wy","px","py","animateVisiting","shortestPath","speed","getNodesInShortestPathOrder","nodesInShortestPathOrder","unshift","createNode","st_row","st_col","fin_row","fin_col","generateNodes","currentRow","getNewNodesWithWallToggled","newNodes","slice","newNode","resetEnds","getNewNodesWithNewEnds","isStartChanged","isFinishChanged","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","foundPath","PathFindingVisualiser","mouseIsPressed","startChanged","finishChanged","isBusy","prevNode","wallsVisitedOrder","animateShortestPath","queue","bfs","resetPath","dijkstrasCaller","bfsCaller","dfsCaller","animateWalls","reset","recursiveDiv","rowIdx","lineHeight","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","handleMouseLeave","createMaze","Home","fontSize","marginTop","App","process","basename","path","exact","Sorting","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e74f268a.chunk.js","sourcesContent":["export const bubbleSort = (array) => {\r\n  const animations = [];\r\n  bubbleSortHelper(array, animations);\r\n  return animations;\r\n};\r\n\r\nfunction swap(array, i, j) {\r\n  var temp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = temp;\r\n}\r\n\r\nfunction bubbleSortHelper(array, animations) {\r\n  var swapped;\r\n  var n = array.length;\r\n  for (var i = 0; i < n - 1; i++) {\r\n    swapped = false;\r\n    for (var j = 0; j < n - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        swap(array, j, j + 1);\r\n        animations.push([1, j, j + 1]);\r\n        animations.push([2, j, j + 1]);\r\n        swapped = true;\r\n      }\r\n    }\r\n    if (!swapped) break;\r\n  }\r\n}\r\n","export const heapSort = (array) => {\r\n  const animations = [];\r\n  heapSortHelper(array, animations);\r\n  return animations;\r\n};\r\n\r\nfunction heapSortHelper(array, animations) {\r\n  var n = array.length;\r\n\r\n  for (var j = Math.ceil(n / 2 - 1); j >= 0; j--) {\r\n    heapify(array, n, j, animations);\r\n  }\r\n\r\n  for (var i = n - 1; i >= 0; i--) {\r\n    var temp = array[0];\r\n    array[0] = array[i];\r\n    array[i] = temp;\r\n    animations.push([1, 0, i]);\r\n    animations.push([2, 0, i]);\r\n    heapify(array, i, 0, animations);\r\n  }\r\n}\r\n\r\nfunction heapify(array, n, i, animations) {\r\n  var largest = i;\r\n  var l = 2 * i + 1;\r\n  var r = 2 * i + 2;\r\n\r\n  animations.push([1, largest]);\r\n  if (l < n) {\r\n    animations.push([2, l]);\r\n    animations.push([3, l]);\r\n  }\r\n  if (l < n && array[l] > array[largest]) {\r\n    animations.push([0, largest]);\r\n    largest = l;\r\n    animations.push([1, largest]);\r\n  }\r\n  if (r < n) {\r\n    animations.push([2, r]);\r\n    animations.push([3, r]);\r\n  }\r\n  if (r < n && array[r] > array[largest]) {\r\n    animations.push([0, largest]);\r\n    largest = r;\r\n    animations.push([1, largest]);\r\n  }\r\n\r\n  if (largest !== i) {\r\n    var temp = array[i];\r\n    array[i] = array[largest];\r\n    array[largest] = temp;\r\n    animations.push([1, i, largest]);\r\n    animations.push([2, i, largest]);\r\n    animations.push([0, largest]);\r\n    heapify(array, n, largest, animations);\r\n  }\r\n  animations.push([0, largest]);\r\n}\r\n","export const mergeSort = (array) => {\r\n  if (array.length === 1) return array;\r\n  const animations = [];\r\n  mergeSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n};\r\n\r\nfunction mergeSortHelper(mainarray, start, end, animations) {\r\n  if (start === end) return;\r\n  const mid = Math.floor((start + end) / 2);\r\n  mergeSortHelper(mainarray, start, mid, animations);\r\n  mergeSortHelper(mainarray, mid + 1, end, animations);\r\n  merge(mainarray, start, mid, end, animations);\r\n}\r\n\r\nfunction merge(mainarray, start, mid, end, animations) {\r\n  var k = start;\r\n  var i = start;\r\n  var j = mid + 1;\r\n  var temp = [];\r\n  while (i <= mid && j <= end) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (mainarray[i] <= mainarray[j]) {\r\n      animations.push([k++, mainarray[i]]);\r\n      temp.push(mainarray[i++]);\r\n    } else {\r\n      animations.push([k++, mainarray[j]]);\r\n      temp.push(mainarray[j++]);\r\n    }\r\n  }\r\n\r\n  while (i <= mid) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k++, mainarray[i]]);\r\n    temp.push(mainarray[i++]);\r\n  }\r\n  while (j <= end) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k++, mainarray[j]]);\r\n    temp.push(mainarray[j++]);\r\n  }\r\n  k = start;\r\n\r\n  for (var l = 0; l < temp.length; l++) mainarray[k++] = temp[l];\r\n}\r\n","export const quickSort = (array) => {\r\n  const animations = [];\r\n  quickSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n};\r\n\r\nfunction quickSortHelper(array, start, end, animations) {\r\n  if (end < start) return;\r\n  var pivot = findPivot(array, start, end, animations);\r\n  quickSortHelper(array, start, pivot - 1, animations);\r\n  quickSortHelper(array, pivot + 1, end, animations);\r\n}\r\n\r\nfunction findPivot(array, start, end, animations) {\r\n  var l = array[start];\r\n  var m = start;\r\n  for (var i = start + 1; i <= end; i++) {\r\n    if (array[i] <= l) {\r\n      var temp = array[i];\r\n      array[i] = array[++m];\r\n      array[m] = temp;\r\n      animations.push([1, start, i, m]);\r\n      animations.push([2, start, i, m]);\r\n    }\r\n  }\r\n  temp = array[start];\r\n  array[start] = array[m];\r\n  array[m] = temp;\r\n  animations.push([1, start, m]);\r\n  animations.push([2, start, m]);\r\n  return m;\r\n}\r\n","export const reverseSort = (array) => {\r\n  const animations = [];\r\n  reverseSortHelper(array, 0, array.length - 1, animations);\r\n  return animations;\r\n};\r\n\r\nfunction reverseSortHelper(array, start, end, animations) {\r\n  if (end < start) return;\r\n  var pivot = findPivot(array, start, end, animations);\r\n  reverseSortHelper(array, start, pivot - 1, animations);\r\n  reverseSortHelper(array, pivot + 1, end, animations);\r\n}\r\n\r\nfunction findPivot(array, start, end, animations) {\r\n  var l = array[start];\r\n  var m = start;\r\n  for (var i = start + 1; i <= end; i++) {\r\n    if (array[i] > l) {\r\n      var temp = array[i];\r\n      array[i] = array[++m];\r\n      array[m] = temp;\r\n      animations.push([start, i, m]);\r\n    }\r\n  }\r\n  temp = array[start];\r\n  array[start] = array[m];\r\n  array[m] = temp;\r\n  animations.push([start, m]);\r\n  return m;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./sorting.css\";\r\nimport { Navbar, NavbarBrand, Button, Nav, NavItem } from \"reactstrap\";\r\nimport { bubbleSort } from \"./sortingalgos/bubbleSort\";\r\nimport { heapSort } from \"./sortingalgos/heapSort\";\r\nimport { insertionSort } from \"./sortingalgos/insertionSort\";\r\nimport { mergeSort } from \"./sortingalgos/mergeSort\";\r\nimport { quickSort } from \"./sortingalgos/quickSort\";\r\nimport { reverseSort } from \"./sortingalgos/reverseSort\";\r\nimport { selectionSort } from \"./sortingalgos/selectionSort\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ArrayBar = ({ array, pixel }) => {\r\n  const bars = array.map((value, idx) => {\r\n    return (\r\n      <div\r\n        className=\"array-bar\"\r\n        key={idx}\r\n        style={{\r\n          height: `${value}px`,\r\n          backgroundColor: \"white\",\r\n          width: `${pixel.width}px`,\r\n          marginRight: `${pixel.mr}px`,\r\n        }}\r\n      ></div>\r\n    );\r\n  });\r\n  return bars;\r\n};\r\n\r\nvar ANIMATION_SPEED_MS = 5;\r\nvar ARRAY_LEN = 80;\r\nvar timeouts = [];\r\n\r\nclass SortingVisualiser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      pixel: {\r\n        width: 0,\r\n        mr: 0,\r\n      },\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", () => {\r\n      if (this.container && this.container.offsetWidth) {\r\n        console.log(this.container.offsetWidth);\r\n        this.setState({\r\n          pixel: {\r\n            width: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n            mr: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n          },\r\n        });\r\n      }\r\n    });\r\n    this.setState({\r\n      pixel: {\r\n        width: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n        mr: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n      },\r\n    });\r\n    this.resetArray();\r\n  }\r\n\r\n  toggle = () => this.setState({ dropdownOpen: !this.state.dropdownOpen });\r\n\r\n  reverseSort() {\r\n    const animations = reverseSort(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      if (animations[i].length === 3) {\r\n        const [pivot, barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        arraybars[pivot].style.backgroundColor = \"white\";\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            var tempHeight = barOne.style.height;\r\n            barOne.style.height = barTwo.style.height;\r\n            barTwo.style.height = tempHeight;\r\n          }, 1)\r\n        );\r\n      } else {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            var tempHeight = barOne.style.height;\r\n            barOne.style.height = barTwo.style.height;\r\n            barTwo.style.height = tempHeight;\r\n          }, 1)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  mergeSort = () => {\r\n    const animations = mergeSort(this.state.array);\r\n    console.log(animations);\r\n    for (var i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      if (i % 3 !== 2) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        const color = i % 3 === 0 ? \"blue\" : \"white\";\r\n\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barOne.style.backgroundColor = color;\r\n            barTwo.style.backgroundColor = color;\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else {\r\n        const [barIdx, barheight] = animations[i];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            arraybars[barIdx].style.height = `${barheight}px`;\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  quickSort = () => {\r\n    const animations = quickSort(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      if (animations[i].length === 4) {\r\n        const [dec, pivot, barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[pivot].style.backgroundColor = \"red\";\r\n              barOne.style.backgroundColor = \"blue\";\r\n              barTwo.style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              var tempHeight = barOne.style.height;\r\n              barOne.style.height = barTwo.style.height;\r\n              barTwo.style.height = tempHeight;\r\n              barOne.style.backgroundColor = \"white\";\r\n              barTwo.style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      } else {\r\n        const [dec, barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              barOne.style.backgroundColor = \"blue\";\r\n              barTwo.style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              var tempHeight = barOne.style.height;\r\n              barOne.style.height = barTwo.style.height;\r\n              barTwo.style.height = tempHeight;\r\n              barOne.style.backgroundColor = \"white\";\r\n              barTwo.style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  bubbleSort() {\r\n    const animations = bubbleSort(this.state.array);\r\n    console.log(this.state.array);\r\n    for (var i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      const [dec, barOneIdx, barTwoIdx] = animations[i];\r\n      const barOne = arraybars[barOneIdx];\r\n      const barTwo = arraybars[barTwoIdx];\r\n      if (dec === 1) {\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barOne.style.backgroundColor = \"blue\";\r\n            barTwo.style.backgroundColor = \"blue\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else {\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            var tempHeight = barOne.style.height;\r\n            barOne.style.height = barTwo.style.height;\r\n            barTwo.style.height = tempHeight;\r\n            barOne.style.backgroundColor = \"white\";\r\n            barTwo.style.backgroundColor = \"white\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  insertionSort() {\r\n    const animations = insertionSort(this.state.array);\r\n    for (var i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      const [dec, barOneIdx, barTwoIdx_hei] = animations[i];\r\n      if (dec === 0) {\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            arraybars[barOneIdx].style.backgroundColor = \"red\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else if (dec === 1) {\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx_hei];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barOne.style.backgroundColor = \"blue\";\r\n            barTwo.style.backgroundColor = \"blue\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else if (dec === 3) {\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx_hei];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barOne.style.backgroundColor = \"white\";\r\n            barTwo.style.backgroundColor = \"red\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else if (dec === 2) {\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx_hei];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barTwo.style.height = barOne.style.height;\r\n            barOne.style.backgroundColor = \"white\";\r\n            barTwo.style.backgroundColor = \"white\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      } else {\r\n        const barOne = arraybars[barOneIdx];\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            barOne.style.height = `${barTwoIdx_hei}px`;\r\n            barOne.style.backgroundColor = \"white\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  selectionSort() {\r\n    const animations = selectionSort(this.state.array);\r\n    for (var i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      if (animations[i].length === 2) {\r\n        const [dec, idx] = animations[i];\r\n        if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"red\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 2) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 3) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 4) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 5) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"yellow\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      } else {\r\n        const [dec, barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              barOne.style.backgroundColor = \"blue\";\r\n              barTwo.style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              var tempHeight = barOne.style.height;\r\n              barOne.style.height = barTwo.style.height;\r\n              barTwo.style.height = tempHeight;\r\n              barOne.style.backgroundColor = \"white\";\r\n              barTwo.style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  heapSort() {\r\n    const animations = heapSort(this.state.array);\r\n    for (var i = 0; i < animations.length; i++) {\r\n      const arraybars = document.getElementsByClassName(\"array-bar\");\r\n      if (animations[i].length === 2) {\r\n        const [dec, idx] = animations[i];\r\n        if (dec === 0) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"yellow\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else if (dec === 2) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              arraybars[idx].style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      } else {\r\n        const [dec, barOneIdx, barTwoIdx] = animations[i];\r\n        const barOne = arraybars[barOneIdx];\r\n        const barTwo = arraybars[barTwoIdx];\r\n        if (dec === 1) {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              barOne.style.backgroundColor = \"blue\";\r\n              barTwo.style.backgroundColor = \"blue\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        } else {\r\n          timeouts.push(\r\n            setTimeout(() => {\r\n              var tempHeight = barOne.style.height;\r\n              barOne.style.height = barTwo.style.height;\r\n              barTwo.style.height = tempHeight;\r\n              barOne.style.backgroundColor = \"white\";\r\n              barTwo.style.backgroundColor = \"white\";\r\n            }, i * ANIMATION_SPEED_MS)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clearTimeout_() {\r\n    for (var i = 0; i < timeouts.length; i++) clearTimeout(timeouts[i]);\r\n    timeouts = [];\r\n    const arraybars = document.getElementsByClassName(\"array-bar\");\r\n\r\n    for (var j = 0; j < arraybars.length; j++)\r\n      arraybars[j].style.backgroundColor = \"white\";\r\n  }\r\n\r\n  resetArray() {\r\n    this.clearTimeout_();\r\n    const array = [];\r\n    for (var i = 0; i < ARRAY_LEN; i++) array.push(randomNumber(5, 500));\r\n    this.setState({ array });\r\n  }\r\n\r\n  changeArrayLength = (e) => {\r\n    ARRAY_LEN = parseInt(e.target.value);\r\n    this.setState({\r\n      pixel: {\r\n        width: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n        mr: (this.container.offsetWidth / ARRAY_LEN) * 0.5,\r\n      },\r\n    });\r\n    this.resetArray();\r\n  };\r\n\r\n  changeSortingSpeed = (e) => {\r\n    ANIMATION_SPEED_MS = 403 - Number(e.target.value);\r\n  };\r\n\r\n  calculateComplexity = (e) => {\r\n    var value = e.target.value;\r\n    var tc = document.getElementById(\"tc\");\r\n    var sc = document.getElementById(\"sc\");\r\n    switch (value) {\r\n      case \"1\":\r\n        tc.innerHTML = \"O(nlogn)\";\r\n        sc.innerHTML = \"O(n)\";\r\n        break;\r\n      case \"2\":\r\n        tc.innerHTML = \"O(nlogn)\";\r\n        sc.innerHTML = \"O(logn)\";\r\n        break;\r\n      case \"3\":\r\n        tc.innerHTML = \"O(n²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"4\":\r\n        tc.innerHTML = \"O(n²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"5\":\r\n        tc.innerHTML = \"O(nlogn)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"6\":\r\n        tc.innerHTML = \"O(n²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  sort = () => {\r\n    var value = document.getElementById(\"sort\").value;\r\n    switch (value) {\r\n      case \"1\":\r\n        this.mergeSort();\r\n        break;\r\n      case \"2\":\r\n        this.quickSort();\r\n        break;\r\n      case \"3\":\r\n        this.insertionSort();\r\n        break;\r\n      case \"4\":\r\n        this.selectionSort();\r\n        break;\r\n      case \"5\":\r\n        this.heapSort();\r\n        break;\r\n      case \"6\":\r\n        this.bubbleSort();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark expand=\"md\" className=\"bg-dark\">\r\n          <div className=\"container\">\r\n            <NavbarBrand className=\"mr-auto\">\r\n              <Link className=\"text-decoration-none text-light\" to=\"/\">\r\n                Algo-visualiser\r\n              </Link>\r\n            </NavbarBrand>\r\n            <Nav navbar className=\"row\">\r\n              <NavItem className=\"mr-5 text-white\" style={{ width: \"30px\" }}>\r\n                <label htmlFor=\"tc\">Time</label>\r\n                <label\r\n                  type=\"text\"\r\n                  className=\"form-control-range bg-dark\"\r\n                  id=\"tc\"\r\n                >\r\n                  --\r\n                </label>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\" style={{ width: \"30px\" }}>\r\n                <label htmlFor=\"sc\">Space</label>\r\n                <label\r\n                  type=\"text\"\r\n                  className=\"form-control-range bg-dark\"\r\n                  id=\"sc\"\r\n                >\r\n                  --\r\n                </label>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\">\r\n                <label htmlFor=\"speed\">Sorting speed</label>\r\n                <input\r\n                  type=\"range\"\r\n                  className=\"form-control-range\"\r\n                  id=\"speed\"\r\n                  min=\"3\"\r\n                  max=\"400\"\r\n                  defaultValue=\"360\"\r\n                  onChange={(e) => this.changeSortingSpeed(e)}\r\n                />\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\">\r\n                <label htmlFor=\"size\">Array size</label>\r\n                <input\r\n                  type=\"range\"\r\n                  className=\"form-control-range\"\r\n                  id=\"size\"\r\n                  min=\"10\"\r\n                  max=\"100\"\r\n                  defaultValue=\"80\"\r\n                  onChange={(e) => this.changeArrayLength(e)}\r\n                />\r\n              </NavItem>\r\n              <NavItem className=\"mr-4\">\r\n                <Button\r\n                  className=\"bg-primary btn-block\"\r\n                  onClick={() => this.sort()}\r\n                >\r\n                  Sort\r\n                </Button>\r\n                <Button\r\n                  className=\"bg-warning btn-block\"\r\n                  onClick={() => this.reverseSort()}\r\n                >\r\n                  Reverse\r\n                </Button>\r\n              </NavItem>\r\n              <NavItem className=\"mr-2\">\r\n                <select\r\n                  id=\"sort\"\r\n                  className=\"btn btn-light border border-warning\"\r\n                  onChange={(e) => this.calculateComplexity(e)}\r\n                >\r\n                  <option value=\"0\">Sorting Algorithm</option>\r\n                  <option value=\"1\">MergeSort</option>\r\n                  <option value=\"2\">QuickSort</option>\r\n                  <option value=\"3\">InsertionSort</option>\r\n                  <option value=\"4\">SelectionSort</option>\r\n                  <option value=\"5\">HeapSort</option>\r\n                  <option value=\"6\">BubbleSort</option>\r\n                </select>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button className=\"bg-danger\" onClick={() => this.resetArray()}>\r\n                  Reset\r\n                </Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n        </Navbar>\r\n        <div\r\n          ref={(el) => (this.container = el)}\r\n          className=\"container\"\r\n          id=\"array-bar\"\r\n        >\r\n          <ArrayBar array={this.state.array} pixel={this.state.pixel} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport default SortingVisualiser;\r\n","export const insertionSort = (array) => {\r\n  const animations = [];\r\n  insertionSortHelper(array, animations);\r\n  return animations;\r\n};\r\n\r\nfunction insertionSortHelper(array, animations) {\r\n  var n = array.length;\r\n  for (var i = 1; i < n; i++) {\r\n    var key = array[i];\r\n    var j = i - 1;\r\n    animations.push([0, i]);\r\n    while (j >= 0 && array[j] > key) {\r\n      array[j + 1] = array[j];\r\n      animations.push([1, j, j + 1]);\r\n      animations.push([2, j, j + 1]);\r\n      j--;\r\n    }\r\n    array[j + 1] = key;\r\n    animations.push([3, i, j + 1]);\r\n    animations.push([4, j + 1, key]);\r\n  }\r\n}\r\n","export const selectionSort = (array) => {\r\n  const animations = [];\r\n  selectionSortHelper(array, animations);\r\n  return animations;\r\n};\r\n\r\nfunction selectionSortHelper(array, animations) {\r\n  var n = array.length;\r\n\r\n  for (var i = 0; i < n - 1; i++) {\r\n    var min_idx = i;\r\n    animations.push([1, i]);\r\n    for (var j = i + 1; j < n; j++) {\r\n      animations.push([2, j]);\r\n      animations.push([3, j]);\r\n      if (array[j] < array[min_idx]) {\r\n        if (min_idx !== i) animations.push([4, min_idx]);\r\n        animations.push([5, j]);\r\n        min_idx = j;\r\n      }\r\n    }\r\n\r\n    var temp = array[min_idx];\r\n    array[min_idx] = array[i];\r\n    array[i] = temp;\r\n    animations.push([1, min_idx, i]);\r\n    animations.push([2, min_idx, i]);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Node.css\";\r\n\r\nclass Node extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const {\r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      onMouseLeave,\r\n      row,\r\n    } = this.props;\r\n    const extraClass = isFinish\r\n      ? \"node-finish\"\r\n      : isStart\r\n      ? \"node-start\"\r\n      : isWall\r\n      ? \"node-wall\"\r\n      : \"\";\r\n\r\n    return (\r\n      <div\r\n        className={`node ${extraClass}`}\r\n        id={`node-${row}-${col}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp(row, col)}\r\n        onMouseLeave={() => onMouseLeave(row, col)}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Node;\r\n","export function dijkstras(grid, startNode, finishNode) {\r\n  const visitedOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortedNodes(unvisitedNodes);\r\n    const currentNode = unvisitedNodes.shift();\r\n    if (currentNode.distance === Infinity) return visitedOrder;\r\n\r\n    currentNode.isVisited = true;\r\n    visitedOrder.push(currentNode);\r\n    if (currentNode.isWall) continue;\r\n    if (currentNode === finishNode) return visitedOrder;\r\n    updateNeighbors(currentNode, grid);\r\n  }\r\n}\r\n\r\nfunction getNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) for (const node of row) nodes.push(node);\r\n  return nodes;\r\n}\r\n\r\nfunction sortedNodes(nodes) {\r\n  nodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\r\n}\r\n","export const bfs = (grid, start, finish) => {\r\n  const visitedOrder = [];\r\n  const queue = [];\r\n  start.isVisited = true;\r\n  start.distance = 0;\r\n  queue.push(start);\r\n  var i_dir = [-1, 1, 0, 0];\r\n  var j_dir = [0, 0, -1, 1];\r\n  while (queue.length !== 0) {\r\n    const currentNode = queue.shift();\r\n    const { row, col } = currentNode;\r\n    for (var i = 0; i < 4; i++) {\r\n      if (\r\n        check(i_dir[i] + row, j_dir[i] + col, grid) &&\r\n        !grid[i_dir[i] + row][j_dir[i] + col].isVisited &&\r\n        !grid[i_dir[i] + row][j_dir[i] + col].isWall\r\n      ) {\r\n        const temp_node = grid[i_dir[i] + row][j_dir[i] + col];\r\n        temp_node.isVisited = true;\r\n        temp_node.distance = currentNode.distance + 1;\r\n        temp_node.previousNode = currentNode;\r\n        queue.push(temp_node);\r\n        visitedOrder.push(temp_node);\r\n\r\n        if (temp_node === finish) return visitedOrder;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nfunction check(i, j, grid) {\r\n  return i >= 0 && i < grid.length && j >= 0 && j < grid[0].length;\r\n}\r\n","export const dfs = (grid, start, finish) => {\r\n  const visitedOrder = [];\r\n  start.distance = 0;\r\n  const compare = { found: false };\r\n  dfsHelper(grid, start, finish, visitedOrder, compare);\r\n  return visitedOrder;\r\n};\r\n\r\nfunction dfsHelper(grid, currentNode, finish, visitedOrder, compare) {\r\n  const { row, col } = currentNode;\r\n  currentNode.isVisited = true;\r\n  var i_dir = [-1, 1, 0, 0];\r\n  var j_dir = [0, 0, -1, 1];\r\n  for (var i = 0; i < 4; i++) {\r\n    if (\r\n      check(i_dir[i] + row, j_dir[i] + col, grid) &&\r\n      !grid[i_dir[i] + row][j_dir[i] + col].isVisited &&\r\n      !grid[i_dir[i] + row][j_dir[i] + col].isWall\r\n    ) {\r\n      const temp_node = grid[i_dir[i] + row][j_dir[i] + col];\r\n      temp_node.isVisited = true;\r\n      temp_node.distance = currentNode.distance + 1;\r\n      temp_node.previousNode = currentNode;\r\n      visitedOrder.push(temp_node);\r\n      if (temp_node === finish) {\r\n        console.log(\"Rschd\");\r\n        compare.found = true;\r\n        return true;\r\n      }\r\n      dfsHelper(grid, temp_node, finish, visitedOrder, compare);\r\n      if (compare.found) return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction check(i, j, grid) {\r\n  return i >= 0 && i < grid.length && j >= 0 && j < grid[0].length;\r\n}\r\n","export const recursiveDivision = (\r\n  grid,\r\n  x_st,\r\n  y_st,\r\n  x_end,\r\n  y_end,\r\n  orientation\r\n) => {\r\n  const wallsOrder = [];\r\n  var i;\r\n  for (i = 0; i < grid[0].length; i++) {\r\n    grid[0][i].isWall = true;\r\n    wallsOrder.push(grid[0][i]);\r\n  }\r\n  for (i = 0; i < grid.length; i++) {\r\n    grid[i][grid[0].length - 1].isWall = true;\r\n    wallsOrder.push(grid[i][grid[0].length - 1]);\r\n  }\r\n  for (i = 0; i < grid.length; i++) {\r\n    grid[i][0].isWall = true;\r\n    wallsOrder.push(grid[i][0]);\r\n  }\r\n  for (i = 0; i < grid[0].length; i++) {\r\n    grid[grid.length - 1][i].isWall = true;\r\n    wallsOrder.push(grid[grid.length - 1][i]);\r\n  }\r\n  if (orientation === undefined)\r\n    divide(grid, x_st + 1, y_st + 1, x_end - 1, y_end - 1, wallsOrder);\r\n  else\r\n    divideDir(\r\n      grid,\r\n      x_st + 1,\r\n      y_st + 1,\r\n      x_end - 1,\r\n      y_end - 1,\r\n      wallsOrder,\r\n      orientation\r\n    );\r\n  return wallsOrder;\r\n};\r\n\r\nfunction divide(grid, x_st, y_st, x_end, y_end, wallsOrder) {\r\n  var orientation = 0;\r\n  if (x_end - x_st < 1 || y_end - y_st < 1) return;\r\n\r\n  if (x_end - x_st > y_end - y_st) orientation = 0;\r\n  else orientation = 1;\r\n\r\n  const wx =\r\n    x_st +\r\n    (orientation === 0 ? Math.floor(Math.random() * (x_end - x_st + 1)) : 0);\r\n  const wy =\r\n    y_st +\r\n    (orientation === 0 ? 0 : Math.floor(Math.random() * (y_end - y_st + 1)));\r\n  const px =\r\n    wx + (orientation === 0 ? 0 : Math.floor(Math.random() * (x_end - x_st)));\r\n  const py =\r\n    wy + (orientation === 0 ? Math.floor(Math.random() * (y_end - y_st)) : 0);\r\n\r\n  var i;\r\n  if (orientation === 0) {\r\n    for (i = wy; i <= y_end; i++) {\r\n      if (px === wx && py === i) continue;\r\n      grid[wx][i].isWall = true;\r\n      wallsOrder.push(grid[wx][i]);\r\n    }\r\n    divide(grid, x_st, y_st, wx - 2, y_end, wallsOrder);\r\n    divide(grid, wx + 2, wy, x_end, y_end, wallsOrder);\r\n    return;\r\n  }\r\n  for (i = wx; i <= x_end; i++) {\r\n    if (px === i && py === wy) {\r\n      continue;\r\n    }\r\n    grid[i][wy].isWall = true;\r\n    wallsOrder.push(grid[i][wy]);\r\n  }\r\n  divide(grid, x_st, y_st, x_end, wy - 2, wallsOrder);\r\n  divide(grid, wx, wy + 2, x_end, y_end, wallsOrder);\r\n}\r\n\r\nfunction divideDir(grid, x_st, y_st, x_end, y_end, wallsOrder, orientation) {\r\n  if (x_end - x_st < 1 || y_end - y_st < 1) return;\r\n\r\n  const wx =\r\n    x_st +\r\n    (orientation === 0 ? Math.floor(Math.random() * (x_end - x_st + 1)) : 0);\r\n  const wy =\r\n    y_st +\r\n    (orientation === 0 ? 0 : Math.floor(Math.random() * (y_end - y_st + 1)));\r\n  const px =\r\n    wx + (orientation === 0 ? 0 : Math.floor(Math.random() * (x_end - x_st)));\r\n  const py =\r\n    wy + (orientation === 0 ? Math.floor(Math.random() * (y_end - y_st)) : 0);\r\n\r\n  var i;\r\n  if (orientation === 0) {\r\n    for (i = wy; i <= y_end; i++) {\r\n      if (px === wx && py === i) continue;\r\n      grid[wx][i].isWall = true;\r\n      wallsOrder.push(grid[wx][i]);\r\n    }\r\n    divideDir(grid, x_st, y_st, wx - 2, y_end, wallsOrder, orientation);\r\n    divideDir(grid, wx + 2, wy, x_end, y_end, wallsOrder, orientation);\r\n    return;\r\n  }\r\n  for (i = wx; i <= x_end; i++) {\r\n    if (px === i && py === wy) {\r\n      continue;\r\n    }\r\n    grid[i][wy].isWall = true;\r\n    wallsOrder.push(grid[i][wy]);\r\n  }\r\n  divideDir(grid, x_st, y_st, x_end, wy - 2, wallsOrder, orientation);\r\n  divideDir(grid, wx, wy + 2, x_end, y_end, wallsOrder, orientation);\r\n}\r\n","export function animateVisiting(visitedOrder, shortestPath, timeouts, speed) {\r\n  for (let i = 0; i < visitedOrder.length; i++) {\r\n    const node = visitedOrder[i];\r\n    if (node.isFinish || node.isStart) continue;\r\n    if (node.isWall) {\r\n      timeouts.push(\r\n        setTimeout(() => {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-wall node-visited\";\r\n        }, i * speed)\r\n      );\r\n      continue;\r\n    }\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-visited\";\r\n      }, i * speed)\r\n    );\r\n  }\r\n}\r\n\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","function createNode(row, col, st_row, st_col, fin_row, fin_col) {\r\n  return {\r\n    col,\r\n    row,\r\n    isVisited: false,\r\n    isStart: row === st_row && col === st_col,\r\n    isFinish: row === fin_row && col === fin_col,\r\n    isWall: false,\r\n    distance: Infinity,\r\n    previousNode: null,\r\n  };\r\n}\r\n\r\nexport function generateNodes(st_row, st_col, fin_row, fin_col) {\r\n  const nodes = [];\r\n  for (var row = 0; row < 20; row++) {\r\n    const currentRow = [];\r\n    for (var col = 0; col < 55; col++) {\r\n      currentRow.push(createNode(row, col, st_row, st_col, fin_row, fin_col));\r\n    }\r\n    nodes.push(currentRow);\r\n  }\r\n  return nodes;\r\n}\r\n\r\nexport function getNewNodesWithWallToggled(nodes, row, col) {\r\n  const newNodes = nodes.slice();\r\n  const node = newNodes[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newNodes[row][col] = newNode;\r\n  return newNodes;\r\n}\r\n\r\nexport function resetEnds(nodes, row, col) {\r\n  const newNodes = nodes.slice();\r\n  const node = newNodes[row][col];\r\n  var newNode = { ...node };\r\n  if (node.isStart) {\r\n    newNode.isStart = false;\r\n  }\r\n  if (node.isFinish) {\r\n    newNode.isFinish = false;\r\n  }\r\n\r\n  newNodes[row][col] = newNode;\r\n  return newNodes;\r\n}\r\n\r\nexport function getNewNodesWithNewEnds(\r\n  nodes,\r\n  row,\r\n  col,\r\n  isStartChanged,\r\n  isFinishChanged\r\n) {\r\n  const newNodes = nodes.slice();\r\n  const node = newNodes[row][col];\r\n  var newNode = { ...node };\r\n  if (isStartChanged) {\r\n    newNode = {\r\n      ...node,\r\n      isStart: true,\r\n      isWall: false,\r\n    };\r\n  }\r\n  if (isFinishChanged) {\r\n    newNode = {\r\n      ...node,\r\n      isFinish: true,\r\n      isWall: false,\r\n    };\r\n  }\r\n\r\n  newNodes[row][col] = newNode;\r\n  return newNodes;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Nav, Navbar, NavbarBrand, NavItem } from \"reactstrap\";\r\nimport Node from \"./Node/Node\";\r\nimport \"./Pathfinding.css\";\r\nimport \"./Node/Node.css\";\r\nimport { dijkstras } from \"./pathfindingalgos/dijkstras\";\r\nimport { bfs } from \"./pathfindingalgos/bfs\";\r\nimport { dfs } from \"./pathfindingalgos/dfs\";\r\nimport { recursiveDivision } from \"./mazealgos/recursiveDivision\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  animateVisiting,\r\n  getNodesInShortestPathOrder,\r\n} from \"./helpers/animation\";\r\nimport {\r\n  generateNodes,\r\n  getNewNodesWithNewEnds,\r\n  getNewNodesWithWallToggled,\r\n  resetEnds,\r\n} from \"./helpers/nodes\";\r\n\r\nvar START_NODE_ROW = 10;\r\nvar START_NODE_COL = 15;\r\nvar FINISH_NODE_ROW = 10;\r\nvar FINISH_NODE_COL = 45;\r\nvar ANIMATION_SPEED_MS = 15;\r\nvar timeouts = [];\r\nvar foundPath = [];\r\nvar visitedOrder = [];\r\n\r\nexport default class PathFindingVisualiser extends Component {\r\n  state = {\r\n    nodes: [],\r\n    mouseIsPressed: false,\r\n    startChanged: false,\r\n    finishChanged: false,\r\n    isBusy: false,\r\n    prevNode: null,\r\n  };\r\n\r\n  animateWalls(wallsVisitedOrder, nodes) {\r\n    for (var i = 0; i < wallsVisitedOrder.length - 1; i++) {\r\n      const node = wallsVisitedOrder[i];\r\n      if (node.isFinish || node.isStart) {\r\n        node.isWall = false;\r\n        continue;\r\n      }\r\n      timeouts.push(\r\n        setTimeout(() => {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-wall\";\r\n        }, i * ANIMATION_SPEED_MS)\r\n      );\r\n    }\r\n    const node = wallsVisitedOrder[wallsVisitedOrder.length - 1];\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          \"node node-wall\";\r\n        this.setState({\r\n          nodes,\r\n        });\r\n      }, i * ANIMATION_SPEED_MS)\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      nodes: generateNodes(\r\n        START_NODE_ROW,\r\n        START_NODE_COL,\r\n        FINISH_NODE_ROW,\r\n        FINISH_NODE_COL\r\n      ),\r\n    });\r\n  }\r\n\r\n  handleMouseDown(row, col) {\r\n    if (row < 0 || row > 19 || col < 0 || col > 54) return;\r\n    if (this.state.isBusy) return;\r\n    var newNodes;\r\n    if (this.state.nodes[row][col].isFinish) {\r\n      newNodes = resetEnds(this.state.nodes, row, col);\r\n      this.setState({ finishChanged: true });\r\n    } else if (this.state.nodes[row][col].isStart) {\r\n      newNodes = resetEnds(this.state.nodes, row, col);\r\n      this.setState({ startChanged: true });\r\n    } else newNodes = getNewNodesWithWallToggled(this.state.nodes, row, col);\r\n    this.setState({ nodes: newNodes, mouseIsPressed: true });\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (row < 0 || row > 19 || col < 0 || col > 54) return;\r\n    if (!this.state.mouseIsPressed || this.state.isBusy) return;\r\n    if (this.state.startChanged) {\r\n      if (this.state.nodes[row][col].isWall)\r\n        this.setState({\r\n          prevNode: this.state.nodes[row][col],\r\n        });\r\n      const newNodes = getNewNodesWithNewEnds(\r\n        this.state.nodes,\r\n        row,\r\n        col,\r\n        this.state.startChanged,\r\n        this.state.finishChanged\r\n      );\r\n      START_NODE_ROW = row;\r\n      START_NODE_COL = col;\r\n      this.setState({ nodes: newNodes });\r\n      return;\r\n    }\r\n    if (this.state.finishChanged) {\r\n      if (this.state.nodes[row][col].isWall)\r\n        this.setState({\r\n          prevNode: this.state.nodes[row][col],\r\n        });\r\n      const newNodes = getNewNodesWithNewEnds(\r\n        this.state.nodes,\r\n        row,\r\n        col,\r\n        this.state.startChanged,\r\n        this.state.finishChanged\r\n      );\r\n      FINISH_NODE_ROW = row;\r\n      FINISH_NODE_COL = col;\r\n      this.setState({ nodes: newNodes });\r\n      return;\r\n    }\r\n    const newNodes = getNewNodesWithWallToggled(\r\n      this.state.nodes,\r\n      row,\r\n      col,\r\n      this.state.startChanged,\r\n      this.state.finishChanged\r\n    );\r\n    this.setState({ nodes: newNodes });\r\n  }\r\n\r\n  handleMouseLeave(row, col) {\r\n    if (row < 0 || row > 19 || col < 0 || col > 54) return;\r\n    if (this.state.isBusy) return;\r\n    if (this.state.startChanged || this.state.finishChanged) {\r\n      const newNodes = resetEnds(this.state.nodes, row, col);\r\n      if (this.state.prevNode) newNodes[row][col] = this.state.prevNode;\r\n      this.setState({ nodes: newNodes, prevNode: null });\r\n    }\r\n  }\r\n\r\n  handleMouseUp(row, col) {\r\n    if (row < 0 || row > 19 || col < 0 || col > 54) return;\r\n    if (this.state.isBusy) return;\r\n    if (this.state.startChanged) {\r\n      const newNodes = getNewNodesWithNewEnds(\r\n        this.state.nodes,\r\n        row,\r\n        col,\r\n        this.state.startChanged,\r\n        this.state.finishChanged\r\n      );\r\n      START_NODE_ROW = row;\r\n      START_NODE_COL = col;\r\n\r\n      this.setState({\r\n        nodes: newNodes,\r\n        startChanged: false,\r\n      });\r\n    } else if (this.state.finishChanged) {\r\n      const newNodes = getNewNodesWithNewEnds(\r\n        this.state.nodes,\r\n        row,\r\n        col,\r\n        this.state.startChanged,\r\n        this.state.finishChanged\r\n      );\r\n      FINISH_NODE_ROW = row;\r\n      FINISH_NODE_COL = col;\r\n      this.setState({\r\n        nodes: newNodes,\r\n        finishChanged: false,\r\n      });\r\n    }\r\n    this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  dijkstrasCaller() {\r\n    const start = this.state.nodes[START_NODE_ROW][START_NODE_COL];\r\n    const finish = this.state.nodes[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    visitedOrder = dijkstras(this.state.nodes, start, finish);\r\n    foundPath = getNodesInShortestPathOrder(finish);\r\n    animateVisiting(visitedOrder, foundPath, timeouts, ANIMATION_SPEED_MS);\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        this.animateShortestPath(foundPath);\r\n      }, (visitedOrder.length - 1) * ANIMATION_SPEED_MS)\r\n    );\r\n  }\r\n\r\n  bfsCaller() {\r\n    const start = this.state.nodes[START_NODE_ROW][START_NODE_COL];\r\n    const finish = this.state.nodes[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    visitedOrder = bfs(this.state.nodes, start, finish);\r\n    foundPath = getNodesInShortestPathOrder(finish);\r\n    animateVisiting(visitedOrder, foundPath, timeouts, ANIMATION_SPEED_MS);\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        this.animateShortestPath(foundPath);\r\n      }, (visitedOrder.length - 1) * ANIMATION_SPEED_MS)\r\n    );\r\n  }\r\n\r\n  dfsCaller() {\r\n    const start = this.state.nodes[START_NODE_ROW][START_NODE_COL];\r\n    const finish = this.state.nodes[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    visitedOrder = dfs(this.state.nodes, start, finish);\r\n    foundPath = getNodesInShortestPathOrder(finish);\r\n    animateVisiting(visitedOrder, foundPath, timeouts, ANIMATION_SPEED_MS);\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        this.animateShortestPath(foundPath);\r\n      }, (visitedOrder.length - 1) * ANIMATION_SPEED_MS)\r\n    );\r\n  }\r\n\r\n  start() {\r\n    var value = document.getElementById(\"pathfinding\").value;\r\n    this.resetPath();\r\n    this.setState({ isBusy: true });\r\n    switch (value) {\r\n      case \"1\":\r\n        this.dijkstrasCaller();\r\n        break;\r\n      case \"2\":\r\n        this.bfsCaller();\r\n        break;\r\n      case \"3\":\r\n        this.dfsCaller();\r\n        break;\r\n      case \"4\":\r\n        this.selectionSort();\r\n        break;\r\n      case \"5\":\r\n        this.heapSort();\r\n        break;\r\n      case \"6\":\r\n        this.bubbleSort();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  recursiveDiv(orientation) {\r\n    const wallsOrder = recursiveDivision(\r\n      this.state.nodes,\r\n      0,\r\n      0,\r\n      20,\r\n      55,\r\n      orientation\r\n    );\r\n    this.animateWalls(wallsOrder, this.state.nodes);\r\n    timeouts.push(\r\n      setTimeout(() => {\r\n        this.setState({ isBusy: false });\r\n      }, (wallsOrder.length - 1) * ANIMATION_SPEED_MS)\r\n    );\r\n  }\r\n\r\n  createMaze() {\r\n    var value = document.getElementById(\"mazes\").value;\r\n    this.reset();\r\n    this.setState({ isBusy: true });\r\n    switch (value) {\r\n      case \"1\":\r\n        this.recursiveDiv();\r\n        break;\r\n      case \"2\":\r\n        this.recursiveDiv(1);\r\n        break;\r\n      case \"3\":\r\n        this.recursiveDiv(0);\r\n        break;\r\n      case \"4\":\r\n        this.selectionSort();\r\n        break;\r\n      case \"5\":\r\n        this.heapSort();\r\n        break;\r\n      case \"6\":\r\n        this.bubbleSort();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  clearTimeout_() {\r\n    for (var i = 0; i < timeouts.length; i++) clearTimeout(timeouts[i]);\r\n    timeouts = [];\r\n    this.setState({ isBusy: false });\r\n  }\r\n\r\n  calculateComplexity = (e) => {\r\n    var value = e.target.value;\r\n    var tc = document.getElementById(\"tc\");\r\n    var sc = document.getElementById(\"sc\");\r\n    switch (value) {\r\n      case \"1\":\r\n        tc.innerHTML = \"O(V²)\";\r\n        sc.innerHTML = \"O(V)\";\r\n        break;\r\n      case \"2\":\r\n        tc.innerHTML = \"O(nlogn)\";\r\n        sc.innerHTML = \"O(logn)\";\r\n        break;\r\n      case \"3\":\r\n        tc.innerHTML = \"O(V²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"4\":\r\n        tc.innerHTML = \"O(n²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"5\":\r\n        tc.innerHTML = \"O(nlogn)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      case \"6\":\r\n        tc.innerHTML = \"O(n²)\";\r\n        sc.innerHTML = \"O(1)\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  changeSortingSpeed = (e) => {\r\n    ANIMATION_SPEED_MS = 105 - Number(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { mouseIsPressed } = this.state;\r\n    const nodes = this.state.nodes.map((row, rowIdx) => {\r\n      return (\r\n        <div key={rowIdx} style={{ lineHeight: 0 }}>\r\n          {row.map((node, nodeIdx) => {\r\n            const { row, col, isFinish, isStart, isWall } = node;\r\n            return (\r\n              <Node\r\n                key={nodeIdx}\r\n                col={col}\r\n                isFinish={isFinish}\r\n                isStart={isStart}\r\n                isWall={isWall}\r\n                mouseIsPressed={mouseIsPressed}\r\n                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                onMouseEnter={(row, col) => this.handleMouseEnter(row, col)}\r\n                onMouseUp={() => this.handleMouseUp(row, col)}\r\n                onMouseLeave={() => this.handleMouseLeave(row, col)}\r\n                row={row}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"path\">\r\n        <Navbar dark expand=\"md\" className=\"bg-dark\">\r\n          <div className=\"container\">\r\n            <NavbarBrand className=\"mr-auto\">\r\n              <Link className=\"text-decoration-none text-light\" to=\"/\">\r\n                Algo-visualiser\r\n              </Link>\r\n            </NavbarBrand>\r\n            <Nav navbar className=\"row\">\r\n              <NavItem className=\"mr-3\">\r\n                <select\r\n                  id=\"pathfinding\"\r\n                  className=\"btn btn-light border btn-block\"\r\n                  onChange={(e) => this.calculateComplexity(e)}\r\n                >\r\n                  <option value=\"0\">Algorithms</option>\r\n                  <option value=\"1\">Dijktras's Algorithm</option>\r\n                  <option value=\"2\">BFS</option>\r\n                  <option value=\"3\">DFS</option>\r\n                  <option value=\"4\">Krushkal's Algorithm</option>\r\n                  <option value=\"5\">HeapSort</option>\r\n                  <option value=\"6\">BubbleSort</option>\r\n                </select>\r\n\r\n                <select\r\n                  id=\"mazes\"\r\n                  className=\"btn btn-light border btn-block\"\r\n                  onChange={(e) => this.createMaze(e)}\r\n                >\r\n                  <option value=\"0\">Mazes &amp; Patterns</option>\r\n                  <option value=\"1\">Recursive Division</option>\r\n                  <option value=\"2\">Recursive Division (vertical skew)</option>\r\n                  <option value=\"3\">\r\n                    Recursive Division (horizontal skew)\r\n                  </option>\r\n                  <option value=\"4\">Basic Random Maze</option>\r\n                  <option value=\"5\">Simple Stair Pattern</option>\r\n                </select>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\" style={{ width: \"30px\" }}>\r\n                <label htmlFor=\"tc\">Time</label>\r\n                <label\r\n                  type=\"text\"\r\n                  className=\"form-control-range bg-dark\"\r\n                  id=\"tc\"\r\n                >\r\n                  --\r\n                </label>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\" style={{ width: \"30px\" }}>\r\n                <label htmlFor=\"sc\">Space</label>\r\n                <label\r\n                  type=\"text\"\r\n                  className=\"form-control-range bg-dark\"\r\n                  id=\"sc\"\r\n                >\r\n                  --\r\n                </label>\r\n              </NavItem>\r\n              <NavItem className=\"mr-5 text-white\">\r\n                <label htmlFor=\"speed\">Speed</label>\r\n                <input\r\n                  type=\"range\"\r\n                  className=\"form-control-range\"\r\n                  id=\"speed\"\r\n                  min=\"5\"\r\n                  max=\"100\"\r\n                  defaultValue=\"90\"\r\n                  onChange={(e) => this.changeSortingSpeed(e)}\r\n                />\r\n              </NavItem>\r\n              <NavItem className=\"mr-4\">\r\n                <Button\r\n                  className=\"bg-success btn-block\"\r\n                  onClick={() => this.start()}\r\n                  id=\"start\"\r\n                >\r\n                  Start\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  onClick={() => this.clearTimeout_()}\r\n                >\r\n                  Stop\r\n                </Button>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button\r\n                  className=\"bg-danger btn-block\"\r\n                  onClick={() => this.reset()}\r\n                >\r\n                  Clear Board\r\n                </Button>\r\n                <Button\r\n                  className=\"bg-warning btn-block\"\r\n                  onClick={() => this.resetPath()}\r\n                >\r\n                  Clear path\r\n                </Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </div>\r\n        </Navbar>\r\n        <div id=\"grid\">{nodes}</div>;\r\n      </div>\r\n    );\r\n  }\r\n\r\n  resetPath() {\r\n    for (var i = 0; i < this.state.nodes.length; i++) {\r\n      for (var j = 0; j < this.state.nodes[i].length; j++) {\r\n        const node = this.state.nodes[i][j];\r\n        node.isVisited = false;\r\n        node.distance = Infinity;\r\n        node.previousNode = null;\r\n        if (!node.isStart && !node.isFinish) {\r\n          if (node.isWall) {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node node-wall\";\r\n          } else\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      const node = nodesInShortestPathOrder[i];\r\n      if (node.isStart) {\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node node-start nodes-bg\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n        continue;\r\n      }\r\n      if (node.isFinish) {\r\n        timeouts.push(\r\n          setTimeout(() => {\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n              \"node node-finish nodes-bg\";\r\n          }, i * ANIMATION_SPEED_MS)\r\n        );\r\n        continue;\r\n      }\r\n      timeouts.push(\r\n        setTimeout(() => {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-shortest-path\";\r\n        }, i * ANIMATION_SPEED_MS)\r\n      );\r\n    }\r\n    this.setState({ isBusy: false });\r\n  }\r\n\r\n  reset() {\r\n    this.clearTimeout_();\r\n    for (var i = 0; i < this.state.nodes.length; i++) {\r\n      for (var j = 0; j < this.state.nodes[i].length; j++) {\r\n        const node = this.state.nodes[i][j];\r\n        if (node.isWall) node.isWall = false;\r\n        if (node.isStart) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-start\";\r\n        } else if (node.isFinish) {\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node node-finish\";\r\n        } else\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            \"node\";\r\n      }\r\n    }\r\n    this.setState({\r\n      nodes: generateNodes(\r\n        START_NODE_ROW,\r\n        START_NODE_COL,\r\n        FINISH_NODE_ROW,\r\n        FINISH_NODE_COL\r\n      ),\r\n      isBusy: false,\r\n    });\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container text-center font-weight-bold font-italic\"\r\n        style={{ fontSize: \"20px\", marginTop: \"100px\", color: \"black\" }}\r\n      >\r\n        <h1>Welcome to Algo-Visualiser</h1>\r\n        <h5 style={{ marginTop: \"100px\" }}>Select any one:</h5>\r\n        <div className=\"mt-5\">\r\n          <Link to=\"/sorting\" className=\"btn btn-outline-dark mr-1\">\r\n            Sorting visualization\r\n          </Link>\r\n          <Link to=\"/pathfinding\" className=\"btn btn-outline-dark\">\r\n            Pathfinding visualization\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import SortingVisualiser from \"./Sorting/Sorting\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route, Redirect, HashRouter } from \"react-router-dom\";\nimport PathFindingVisualiser from \"./Pathfinding/Pathfinding\";\nimport Home from \"./Home\";\n\nfunction App() {\n  console.log(process.env.REACT_APP_PUBLIC_URL);\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/sorting\" exact>\n          <SortingVisualiser />\n        </Route>\n        <Route path=\"/pathfinding\" exact>\n          <PathFindingVisualiser />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}